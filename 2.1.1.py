Рассмотрим пример, когда n = 5:

1. Создаём матрицу размера n * n и заполняем её единицами. Получим матрицу вида:

1  1  1  1  1  
1  1  1  1  1  
1  1  1  1  1  
1  1  1  1  1  
1  1  1  1  1  
2. Задаём шаг, чтобы изменять матрицу от первого до предпоследнего элемента, затем от второго до n - 2 и так до тех пор, пока не дойдём до середины матрицы. В соответствии с этим в цикле while задаём условие step < n - step. Переменная step при каждой итерации будет увеличиваться, а n - step будет уменьшаться, тем самым будет сужаться размер матрицы, значения которой нужно менять.

3. Теперь разберём работу цикла while подробнее. Сейчас step = 1. Соответственно в матрице на единицу будут увеличиваться все значения, которые содержаться в ячейках с 
1
1 по 
4
4 строку невключительно и с 
1
1 по 
4
4 столбец невключительно, соответстенно матрица будет выглядеть следующим образом:

1  1  1  1  1  
1  2  2  2  1  
1  2  2  2  1  
1  2  2  2  1  
1  1  1  1  1  
В конце цикла увеличиваем переменную step на 
1
1, теперь step = 2, а n - 2 = 3. Условие 
2
<
3
2<3 выполняется, значит продолжаем итерироваться.

4. Теперь в матрице будут увеличиваться все значения, которые содержаться в ячейках с 
2
2 по 
3
3 строку невключительно и со 
2
2 по 
3
3 столбец невключительно, и наша матрица будет выглядеть вот так:

1  1  1  1  1  
1  2  2  2  1  
1  2  3  2  1  
1  2  2  2  1  
1  1  1  1  1  
Что уже, собственно, соответствует условию, и дальше итерироваться не нужно. Чего, в принципе, и не произойдёт. Переменная step увеличится на 
1
1, теперь step = 3, а n - step = 2. Условие 
3
<
2
3<2 ложное, значит цикл while прекращает свою работу. Остаётся только вывести матрицу на печать.

Для чётного числа n всё работает точно так же, единственная разница в том, что когда мы доберёмся к середине матрицы, то step будет равен n - step, это и будет условием выхода из цикла.Например, при n = 6, step = 3, n - step = 3, условие 
3
<
3
3<3 ложное, цикл прерывается.

Верное решение #894401050
Python 3.10
def make_dartboard(n):
    dartboard = [[1] * n for _ in range(n)]
    step = 1
    while step < n - step:
        for row in range(step, n - step):
            for column in range(step, n - step):
                dartboard[row][column] += 1
        step += 1
    return dartboard

dartboard = make_dartboard(int(input()))

for line in dartboard:
    print(*line)