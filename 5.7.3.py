'''
–ö–ª–∞—Å—Å RomanNumeralüå∂Ô∏èüå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å RomanNumeral, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

number ‚Äî —á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä, IV
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ:

<—á–∏—Å–ª–æ –≤ —Ä–∏–º—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è>
–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —Ç–∏–ø—É int, –ø—Ä–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–∏ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–æ–ª–∂–Ω–æ —è–≤–ª—è—Ç—å—Å—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç.

–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ ==, !=, >, <, >=, <=.

–ù–∞–∫–æ–Ω–µ—Ü, —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ RomanNumeral –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ + –∏ - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ:

—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–ª–æ–∂–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å—É–º–º—É –∏—Å—Ö–æ–¥–Ω—ã—Ö
—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—á–∏—Ç–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ RomanNumeral, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ä–∞–∑–Ω–æ—Å—Ç—å –∏—Å—Ö–æ–¥–Ω—ã—Ö
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∏–∑ —Ä–∏–º—Å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤—Å–µ–≥–¥–∞ –≤—ã—á–∏—Ç–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –º–µ–Ω—å—à–µ–µ —Ä–∏–º—Å–∫–æ–µ —á–∏—Å–ª–æ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Ä–∏–º—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É NotImplemented —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤ –º–µ—Ç–æ–¥–∞—Ö, —Ä–µ–∞–ª–∏–∑—É—é—â–∏—Ö –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Ç–∏–ø–æ–≤ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞ RomanNumeral –Ω–µ—Ç, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π.
'''

from functools import total_ordering

@total_ordering
class RomanNumeral:
    def __init__(self,number):
        self.number = number
        self.number_int = self.__index__()
        
    @property    
    def number(self):
        return self._number
        
    @number.setter    
    def number(self,number):
        if isinstance(number,str):
            self._number = number
        elif isinstance(number,int):
            val = [1000, 900, 500, 400,
                   100, 90, 50, 40,
                   10, 9, 5, 4,1]

            syms = ["M", "CM", "D", "CD",
                    "C", "XC", "L", "XL",
                    "X", "IX", "V", "IV","I"]
            roman_num = ''
            i = 0
            while  number > 0:
                for _ in range(number // val[i]):
                    roman_num += syms[i]
                    number -= val[i]
                i += 1
            self._number = roman_num
        else:
            return NotImplemented
        
    def __str__(self):
        return self._number
      
        
    def __index__(self):
        roman_map = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        result = 0
        prev_value = 0
        for char in self.number:
            value = roman_map[char]
            if value > prev_value:
                result += value - 2 * prev_value
            else:
                result += value
            prev_value = value
        return result
    
    def __add__(self,other):
        if isinstance(other,RomanNumeral):
            return RomanNumeral(self.number_int+other.number_int)
        else:
            return NotImplemented
            
    def __sub__(self,other):
        if isinstance(other,RomanNumeral):
            return RomanNumeral(self.number_int-other.number_int)
        else:
            return NotImplemented            
            
    def __eq__(self,other):
        if isinstance(other,RomanNumeral):
            return self.number_int == other.number_int
        else:
            return NotImplemented
            
    def __lt__(self,other):
        if isinstance(other,RomanNumeral):
            return self.number_int < other.number_int
        else:
            return NotImplemented        
                      
        
        
# INPUT DATA:

# TEST_1:
number = RomanNumeral('IV') + RomanNumeral('VIII')

print(number)
print(int(number))

# TEST_2:
number = RomanNumeral('X') - RomanNumeral('VI')

print(number)
print(int(number))

# TEST_3:
a = RomanNumeral('X')
b = RomanNumeral('XII')

print(a == b)
print(a > b)
print(a < b)
print(a >= b)
print(a <= b)

# TEST_4:
a = RomanNumeral('X')
b = RomanNumeral('X')

print(a == b)
print(a > b)
print(a < b)
print(a >= b)
print(a <= b)

# TEST_5:
number = RomanNumeral('MXL') + RomanNumeral('MCDVIII') - RomanNumeral('I')

print(number)
print(int(number))

# TEST_6:
number = RomanNumeral('I') + RomanNumeral('II') + RomanNumeral('III') - RomanNumeral('V') 

print(number)
print(int(number))

# TEST_7:
romans1 = ['I', 'X', 'L', 'IV', 'IX', 'XLV', 'CXXIV', 'MCMXCIV']
romans2 = ['I', 'V', 'L', 'VI', 'XI', 'XXV', 'CDXLVIII', 'MCMXCI']

for x, y in zip(romans1, romans2):
    number = RomanNumeral(x) + RomanNumeral(y)
    print(number, int(number))

# TEST_8:
romans1 = ['III', 'X', 'L', 'C', 'M', 'XXV', 'XC', 'MMMCMXXXV']
romans2 = ['II', 'V', 'X', 'L', 'D', 'IV', 'VIII', 'MCMXCIV']

for x, y in zip(romans1, romans2):
    number = RomanNumeral(x) - RomanNumeral(y)
    print(number, int(number))

# TEST_9:
romans = ['I', 'IV', 'IX', 'XII', 'XXV', 'XLV', 'LXIX', 'XC', 'CDXLVIII']

for num in romans:
    print(RomanNumeral(num), int(RomanNumeral(num)))

# TEST_10:
roman = RomanNumeral('L')
print(roman.__eq__(1))
print(roman.__ne__(1.1))
print(roman.__gt__(range(5)))
print(roman.__lt__([1, 2, 3]))
print(roman.__ge__({4, 5, 6}))
print(roman.__le__({1: 'one'}))