'''
–ö–ª–∞—Å—Å MutableString üå∂Ô∏è
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å MutableString, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∏–∑–º–µ–Ω—è–µ–º—É—é —Å—Ç—Ä–æ–∫—É. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

string ‚Äî —Å—Ç—Ä–æ–∫–∞, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏. –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, —Å—Ç—Ä–æ–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—É—Å—Ç–æ–π
–ö–ª–∞—Å—Å MutableString –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞:

lower() ‚Äî –º–µ—Ç–æ–¥, –ø–µ—Ä–µ–≤–æ–¥—è—â–∏–π –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
upper() ‚Äî –º–µ—Ç–æ–¥, –ø–µ—Ä–µ–≤–æ–¥—è—â–∏–π –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
–≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–¥–µ:

<—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏>
–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–¥–µ:

MutableString('<—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏>')
–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ MutableString –≤ —Ñ—É–Ω–∫—Ü–∏—é len() –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–µ–º.

–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º –æ–±—ä–µ–∫—Ç–æ–º, —Ç–æ –µ—Å—Ç—å –ø–æ–∑–≤–æ–ª—è—Ç—å –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —Å–≤–æ–∏ —Å–∏–º–≤–æ–ª—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ for.

–¢–∞–∫–∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª—è—Ç—å –ø–æ–ª—É—á–∞—Ç—å, –∏–∑–º–µ–Ω—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –∏–Ω–¥–µ–∫—Å–æ–≤, –ø—Ä–∏—á–µ–º –∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö, —Ç–∞–∫ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö. –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ —Å—Ä–µ–∑—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω—è–µ–º—ã–µ —Å—Ç—Ä–æ–∫–∏.

–ù–∞–∫–æ–Ω–µ—Ü, —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ MutableString –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ü–∏—é —Å–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ +, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∫–æ—Ç–æ—Ä–æ–π –¥–æ–ª–∂–µ–Ω —è–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MutableString, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é –∏—Å—Ö–æ–¥–Ω—ã—Ö.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ MutableString –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π, —Ç–æ –µ—Å—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –Ω–∞–ª–∏—á–∏—é –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –Ω–µ—Ç.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤ –º–µ—Ç–æ–¥–∞—Ö –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
'''

class MutableString:
    def __init__(self,string =''):
        self.string = string
        
    def lower(self):
        
        return self.string.lower()
        
    def upper(self):
        return self.string.upper()
        
    def __str__(self):
        return self.string
        
    def __repr__(self):
        return f'MutableString({repr(self.string)})'
        
    def __len__(self):
        return len(self.string)
        
    def __iter__(self):
        yield from self.string
        
    def __getitem__(self, key):
        return MutableString(self.string[key])

    def __setitem__(self, key, value):
        string = list(self.string)
        string[key] = value
        self.string = ''.join(string)
        
    def __delitem__(self, key):
        string = list(self.string)
        del string[key] 
        self.string = ''.join(string)
           
            
    def __add__(self,other):
        if isinstance(other,MutableString):
            return MutableString(self.string+other.string)
            
# INPUT DATA:

# TEST_1:
mutablestring = MutableString('beegeek')

print(*mutablestring)
print(str(mutablestring))
print(repr(mutablestring))

# TEST_2:
mutablestring = MutableString('Beegeek')

mutablestring.lower()
print(mutablestring)
mutablestring.upper()
print(mutablestring)

# TEST_3:
mutablestring1 = MutableString('bee')
mutablestring2 = MutableString('geek')

print(mutablestring1 + mutablestring2)
print(mutablestring2 + mutablestring1)

# TEST_4:
mutablestring = MutableString('beegeek')

print(mutablestring)
mutablestring[0] = 'B'
mutablestring[-4] = 'G'
print(mutablestring)

# TEST_5:
mutablestring = MutableString('beegeek')

s1 = mutablestring[2:]
s2 = mutablestring[:5]
s3 = mutablestring[2:5:2]

print(s1, type(s1))
print(s2, type(s2))
print(s3, type(s3))

# TEST_6:
mutablestring = MutableString('Ada Wong')
id1 = id(mutablestring)

mutablestring.upper()
id2 = id(mutablestring)

print(id1 == id2)

# TEST_7:
string = '''For a long time it was a mystery to me how something very expensive and technologically advanced could be 
so useless. And I soon realized that a computer is a stupid machine that has the ability to do incredibly smart things, 
while programmers are smart people who have a talent for doing incredibly stupid things. In short, 
they found each other.
Bill Bryson'''

mutablestring1 = MutableString(string)
mutablestring2 = mutablestring1[20:45]

print(mutablestring1 is mutablestring2)

# TEST_8:
string = '''Sometimes it's better to stay home on Monday than to spend the whole week debugging code written on Monday.
Christopher Thompson'''
mutablestring = MutableString(string)

print(mutablestring[30], mutablestring[3], mutablestring[66], mutablestring[66], mutablestring[1], sep='')

# TEST_9:
string = '''Many of you are familiar with the virtues of being a programmer. There are only three of them, 
and of course this is: laziness, impatience and pride. Larry Wall'''
mutablestring = MutableString(string)

print(mutablestring[20])
print(mutablestring[-30])
print(mutablestring[:11])
print(mutablestring[16:])
print(mutablestring[4::10])
print(mutablestring[::-10])

# TEST_10:
string1 = MutableString('–†–∞–∑–±–µ–∂–∞–≤—à–∏—Å—å')
string2 = MutableString('–ø—Ä—ã–≥–Ω—É')
string3 = MutableString('—Å–æ —Å–∫–∞–ª—ã')

array = [string1, string2, string3]
print(array)

# TEST_11:
mutablestring = MutableString()
print(repr(mutablestring))

# TEST_12:
mutablestring = MutableString('beegeek')

del mutablestring[2:5]
del mutablestring[1:5:2]
print(mutablestring)

# TEST_13:
mutablestring = MutableString('beegeek')

mutablestring[-1] = 'ee'
print(mutablestring)

mutablestring[-2:] = 'geek'
print(mutablestring)

# TEST_14:
mutablestring = MutableString('beegeek')

del mutablestring[1:3]
print(mutablestring)